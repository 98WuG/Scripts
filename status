#!/bin/bash

STATUS=""

# Date status
DATE="$(echo -e "\uf073") $(date +%b) $(date +%d)"

# Time status
TIME="$(echo -e "\uf017") $(date +%I:%M%p)"


# Battery status
if [[ $(acpi) == *"Full"* ]];
then
	BATTERY="$(echo -e "\uf1e6 \uf240") FULL"
else
	if [[ $(acpi) == *"Unknown"* ]];
	then
		BATTERY="$(acpi | cut -d ' ' -f 4 | sed 's/.$//')"
	else
		BATTERY="$(acpi | cut -d ' ' -f 4 | sed 's/..$//')"
	fi
	if [ $BATTERY -gt 80 ];
	then
		BATTERY="$(echo -e "\uf240") $BATTERY%"
	elif [ $BATTERY -gt 60 ];
	then
		BATTERY="$(echo -e "\uf241") $BATTERY%"
	elif [ $BATTERY -gt 40 ];
	then
		BATTERY="$(echo -e "\uf242") $BATTERY%"
	elif [ $BATTERY -gt 20 ];
	then
		BATTERY="$(echo -e "\uf243") $BATTERY%"
	else
		BATTERY="$(echo -e "\uf244") $BATTERY%"
	fi
	if [[ $(acpi) != *"Discharging"* ]];
	then
		BATTERY="$(echo -e "\uf1e6") $BATTERY"
	fi
fi

# Network status
WIRELESS="$(echo -e "\uf1eb")"
if [ $(nmcli dev status | sed -n 2p | cut -d " " -f 11) != "--" ];
then
	WIRELESS="$WIRELESS $(nmcli dev status | sed -n 2p | cut -d " " -f 11 | tr '[:lower:]' '[:upper:]')"
else
	WIRELESS="$WIRELESS DISCONNECTED"
fi

# Music
CURRENT="$(mpc current | sed -r 's/&/&amp;/g')"
if [[ -z $CURRENT ]];
then
	CURRENT="$(echo -e "\uf025") Nothing playing"
else
	PLAYSTATUS="$(mpc | sed -n 2p | cut -d " " -f 1 | sed 's/.$//' | sed 's/^.//' | tr '[:lower:]' '[:upper:]')"
	POSITION="$(mpc | sed -n 2p | rev | cut -d " " -f 2 | rev | cut -d "/" -f 1)"
	if [[ "$PLAYSTATUS" == "PLAYING" ]]; then
		PLAYSTATUS="$(echo -e "\uf04b")"
	else
		PLAYSTATUS="$(echo -e "\uf04c")"
	fi
	CURRENT="$PLAYSTATUS  $CURRENT [$POSITION]"
fi

# Schedule

#  NOTE: this is, without a doubt, the sketchiest and ugliest code
#  i have ever written.  please pipe all complaints regarding style,
#  unreadability, inefficiency, or overall terribleness to /dev/null
#
PERIOD=""
# parse schedule as json
JSON="$(curl -s https://ion.tjhsst.edu/api/schedule?format=json)"
# regex json into class blocks
PARSE="$(echo $JSON | grep -Po  '{\"order\":[^,]*,\"name\":[^,]*,\"start\":[^,]*,\"end\":[^}]*}')"
# split class blocks into array elements
readarray -t ARRAY <<<"$PARSE"
# some header stuff
SCHEDDATE="$(echo $JSON | grep -Po  '(?<=\"date\":\")[^,]*(?=\")' | sed 's/<br>/ /g')"
DAYNAME="$(echo $JSON | grep -Po  '(?<=\"day_type\":{\"name\":\")[^,]*(?=\")' | sed 's/<br>/ /g')"
SCHEDDATEPARSED="$(date --date="$SCHEDDATE" "+%A, %B %d, %Y" | sed 's/<br>/ /g')"
NOW="$(date "+%T")"
# loop and print
for i in "${ARRAY[@]}"
do
	# pull out name - replace <br> with space
	NAME="$(echo $i | grep -Po '(?<=\"name\":\")[^\"]*' | sed 's/<br>/ /g'):" 
	#now pull times
	START="$(echo $i | grep -Po '(?<=\"start\":\")[^\"]*' | sed 's/<br>/ /g')"
	END="$(echo $i | grep -Po '(?<=\"end\":\")[^\"]*' | sed 's/<br>/ /g')"
	STARTTIME="$(date --date="$START" "+%T" )"
	ENDTIME="$(date --date="$END" "+%T" )"
	if [[ "$NOW" > "$STARTTIME" && "$NOW" < "$ENDTIME" ]]
	then
		PERIOD="$(echo -e "\uf19d") $NAME $START-$END\n"
	fi
done
printf "\n"

STATUS="$PERIOD$DATE $TIME $BATTERY $WIRELESS"
notify-send "$CURRENT" "$STATUS"
